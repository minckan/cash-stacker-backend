// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  user_id         String    @id
  workspace_id    String
  username        String
  email           String    @unique
  created_at      DateTime? @default(now())
  login_type      String
  role            String
  joined_at       DateTime?
  push_enable     Boolean
  darkMode_enable Boolean
  profile_image   String
  push_id         String
  platform_type   String

  @@index([workspace_id])
}

model Workspace {
  workspace_id   String    @id
  workspace_name String
  created_at     DateTime? @default(now())
}

model Transaction {
  transaction_id   Int      @id @default(autoincrement())
  category_id      Int
  workspace_id     String
  amount           Float
  transaction_type String
  payment_method   String?
  description      String
  transaction_date DateTime
  created_at       DateTime @default(now())

  // 외래 키 관계 정의
  category TransactionCategory @relation(fields: [category_id], references: [category_id])

  @@index([workspace_id, category_id])
}

model TransactionCategory {
  category_id   Int    @id @default(autoincrement())
  workspace_id  String
  category_name String
  category_type String // 'income' or 'expense'

  // 빈 관계 필드 추가
  transactions Transaction[]

  @@index([workspace_id])
}

model AssetType {
  asset_type_id         Int      @id @default(autoincrement())
  workspace_id          String
  asset_type_name       String
  is_foreign_asset_type Boolean? @default(true)
  is_default            Boolean? @default(false)

  @@index([workspace_id])
}

model Asset {
  asset_id      Int                  @id @default(autoincrement())
  workspace_id  String
  asset_type_id Int
  asset_name    String
  balance       Float?
  created_at    DateTime             @default(now())
  currency_code String
  transactions  AssetToTransaction[]

  @@index([workspace_id])
}

enum TransactionType {
  SELL
  BUY
}

model AssetTransaction {
  transaction_id          Int                  @id @default(autoincrement())
  created_at              DateTime             @default(now())
  asset_id                Int
  transaction_type        TransactionType
  description             String?
  transaction_date        DateTime
  exchange_rate           Float?
  shares                  Int?
  price_per_share         Float?
  current_price_per_share Float?
  assets                  AssetToTransaction[]
}

model AssetToTransaction {
  asset_id       Int
  transaction_id Int
  asset          Asset            @relation(fields: [asset_id], references: [asset_id])
  transaction    AssetTransaction @relation(fields: [transaction_id], references: [transaction_id])

  @@id([asset_id, transaction_id])
}

model Invitation {
  id           String   @id @default(uuid())
  workspace_id String
  email        String
  status       String
  token        String
  expiry_date  DateTime
}

model Budget {
  budget_id    Int      @id @default(autoincrement())
  workspace_id String
  start_date   DateTime
  end_date     DateTime
  amount       Float
  created_at   DateTime @default(now())
  isActive     Boolean
}

model Holiday {
  id        Int    @id @default(autoincrement())
  dateKind  String
  dateName  String
  isHoliday String
  locdate   Int
  seq       Int
}
